{"version":3,"file":"chart-config.js","sourceRoot":"","sources":["../../../../../../src/components/chart-config/chart-config.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Prop, Watch, State, h, Element } from '@stencil/core';\r\nimport * as echarts from 'echarts';\r\nimport { ConfigType } from \"../../../../../types\"\r\n\r\n\r\nconst CT:{[key:string]:string} = {\r\n  timeseries_panel:\"line\",\r\n  bar_chart:\"bar\",\r\n  gauge:\"SCORE\",\r\n  pie_chart:\"pie\"\r\n}\r\n@Component({\r\n  tag: 'chart-config',\r\n  styleUrl: 'chart-config.css',\r\n  shadow: true,\r\n})\r\nexport class ChartConfig {\r\n\r\n  @Prop() config: string;\r\n\r\n  @State() configOBJ: ConfigType;\r\n\r\n  @Element() el!: HTMLElement;\r\n\r\n  chartElement!: HTMLDivElement;\r\n  chart!:any;\r\n\r\n  @State() attr:any = {}\r\n  @Watch('config')\r\n  onConfigChange() {\r\n    this.configOBJ = JSON.parse(this.config||'{}');\r\n    this.attr.style = {background:this.configOBJ.PanelOptions?.transparentBackground?'transparent':\"rgb(246 246 246)\"}\r\n    if(this.chart) this.chart.dispose();\r\n    setTimeout(() => {\r\n      this.setEchart();\r\n    }, (60));\r\n    \r\n  }\r\n  setEchart(){\r\n    \r\n    if(['timeseries_panel','bar_chart','gauge','pie_chart'].includes(this.configOBJ.ChartOptions.type)){\r\n    \r\n      const option = {\r\n        xAxis: {\r\n          type: 'category',\r\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            data: [820, 932, 901, 934, 1290, 1330, 1320],\r\n            type: CT[this.configOBJ.ChartOptions?.type] || 'line',\r\n            smooth: true\r\n          }\r\n        ]\r\n      };\r\n      if(!this.chartElement) return;\r\n      this.chart = echarts.init(this.chartElement);\r\n      this.chart.setOption(option);\r\n    }\r\n  }\r\n  connectedCallback(){\r\n    this.configOBJ = JSON.parse(this.config||'{}')\r\n    this.configOBJ.PanelOptions = this.configOBJ.PanelOptions || {}\r\n    this.configOBJ.ChartOptions = this.configOBJ.ChartOptions || {}\r\n    this.attr.style = {background:this.configOBJ.PanelOptions?.transparentBackground?'transparent':\"rgb(246 246 246)\"}\r\n  }\r\n  componentDidLoad(){\r\n    this.setEchart();\r\n  }\r\n  getBar(){\r\n    if ( this.configOBJ.ChartOptions.type === 'text_panel'){\r\n      return <div></div>\r\n    } else if(this.configOBJ.ChartOptions.type === 'table_panel'){\r\n      return <div>\r\n        <table class=\"tbl-data\">\r\n          <thead>\r\n            <tr>\r\n              <th>Mon</th><th>Tue</th><th>Wed</th><th>Thu</th><th>Fri</th><th>Sat</th><th>Sun</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>820</td><td>932</td><td>901</td><td>934</td><td>1290</td><td>1330</td><td>1320</td>\r\n            </tr>\r\n            <tr>\r\n              <td>820</td><td>932</td><td>901</td><td>934</td><td>1290</td><td>1330</td><td>1320</td>\r\n            </tr>\r\n            <tr>\r\n              <td>820</td><td>932</td><td>901</td><td>934</td><td>1290</td><td>1330</td><td>1320</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    } \r\n    return <div class=\"chart\"  ref={(el) => this.chartElement = el as HTMLDivElement}></div>\r\n  }\r\n  render() {\r\n    return <div class=\"box\" {...this.attr} >\r\n      <div class=\"header\">\r\n        <b>{this.configOBJ.PanelOptions?.title}</b>\r\n        <span>{this.configOBJ.PanelOptions?.description}</span>\r\n      </div>\r\n      {this.getBar()}\r\n    </div>\r\n  }\r\n}\r\n"]}